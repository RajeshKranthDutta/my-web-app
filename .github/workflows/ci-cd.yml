name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Or 'main' depending on your setup

permissions:
  id-token: write  # Add necessary permissions for id-token

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out code from the repository
    - name: Check out code
      uses: actions/checkout@v2

    # Step 2: Log in to Azure using Service Principal (with GitHub secrets)
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}  # Service Principal credentials in JSON format stored in GitHub secrets
        environment: azurecloud  # Can be 'azurecloud', 'azureusgovernment', etc. depending on your environment

    # Step 3: Log in to Azure Container Registry (ACR)
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.AZURE_ACR_NAME }}.azurecr.io  # Use your ACR name (e.g., <your-acr-name>.azurecr.io)

    # Step 4: Build and Push Docker Image to Azure Container Registry
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/my-web-app:v1 .
        docker push ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/my-web-app:v1

    # Step 5: Deploy to Azure Kubernetes Service (AKS)
    - name: Deploy to Azure Kubernetes Service
      run: |
        kubectl apply -f k8s/deployment.yaml  # Update this to your actual Kubernetes manifest file (deployment.yaml)