name: CI/CD Pipeline

on:
  push:
    branches:
      - master

permissions:
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out code from the repository
    - name: Check out code
      uses: actions/checkout@v2

    # Step 2: Debug Azure Secrets to check if they're loaded correctly
    - name: Debug Azure Secrets
      run: |
        echo "Azure ACR Name: ${{ secrets.AZURE_ACR_NAME }}"  # Checking ACR Name
        echo "Azure ACR Username: ${{ secrets.AZURE_ACR_USERNAME }}"  # Checking ACR Username
        echo "Azure ACR Password: ${AZURE_ACR_PASSWORD}"  # Donâ€™t print password, just ensure it's available
        echo "Azure Credentials: ${{ secrets.AZURE_CREDENTIALS }}"  # Checking if AZURE_CREDENTIALS is loaded

    # Step 3: Log in to Azure using Service Principal (with GitHub secrets)
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        environment: azurecloud  # This can be adjusted to your Azure environment (e.g., 'azureusgovernment')

    # Step 4: Log in to Azure Container Registry (ACR)
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.AZURE_ACR_NAME }}.azurecr.io  # Use your ACR name (e.g., <your-acr-name>.azurecr.io)
        username: ${{ secrets.AZURE_ACR_USERNAME }}  # ACR username (usually the registry name)
        password: ${{ secrets.AZURE_ACR_PASSWORD }}  # ACR password or service principal client secret

    # Step 5: Build and Push Docker Image to Azure Container Registry
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/my-web-app:v1 .
        docker push ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/my-web-app:v1

    # Step 6: Deploy to Azure Kubernetes Service (AKS)
    - name: Deploy to Azure Kubernetes Service
      run: |
        kubectl apply -f k8s/deployment.yaml  # Update this to your actual Kubernetes manifest file (deployment.yaml)